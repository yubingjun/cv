{"mappings":"AAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAC3C,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAE7C,IAAI,MAAM,GAAG,CAAC,2rCA6Cd,CAAC,AAAC;AACF,IAAI,OAAO,GAAG,EAAE,AAAC;AACjB,iFAAyD;AACjC,2FAAqC;AAC/B,IAA1B,CAAC,GAAG,CAAC,AAAC;AAEV,IAAI,IAAI,GAAG,IAAM;IACf,UAAU,CAAC,IAAM;QACf,iCAAa;QACO,8BAAR;QACM,IAAd,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EACpB,OAAO,IAAI,MAAM,CAAC;aACb,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAC1B,OAAO,IAAI,OAAO,CAAC;aAEnB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,wCAAgB;YAChB,CAAC,IAAI,CAAC,CAAC;YACP,IAAI,EAAE,CAAC;SACR;KACF,EAAE,EAAE,CAAC,CAAC;CACR,AAAC;AAEF,IAAI,EAAE,CAAC","sources":["src/main.js"],"sourcesContent":["let html = document.querySelector(\"#html\");\r\nlet style = document.querySelector(\"#style\");\r\n\r\nlet string = `/*你好，我叫西柚\r\n* 接下来我将演示一下我的前端功底\r\n* 首先我要准备一个div\r\n**/\r\n#div1{\r\n    border:1px solid red;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/* 接下来我把div变成一个八卦图\r\n* 注意看好了\r\n* 首先，把 div 变成一个圆\r\n**/\r\n#div1 {\r\n    border-radius:50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/* 八卦是阴阳两极形成的\r\n* 一黑一白\r\n**/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 现在可以加入魔丸和灵珠了 */\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n`;\r\nlet string2 = \"\";\r\n// string[0].charCodeAt() 可以得出一个字符串的Unicode编码 ASCII Table\r\n// string = string.replace(/\\n/g, \"<br>\"); //正则表达式 把所有的回车变成换行\r\nlet n = 0;\r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    // 如果是回车，就不照搬\r\n    // 如果不是回车就照搬\r\n    if (string[n] === \"\\n\") {\r\n      string2 += \"<br>\";\r\n    } else if (string[n] === \" \") {\r\n      string2 += \"&nbsp\";\r\n    } else {\r\n      string2 += string[n];\r\n    }\r\n    html.innerHTML = string2;\r\n    style.innerHTML = string.substring(0, n);\r\n    window.scrollTo(0, 99999);\r\n    html.scrollTo(0, 99999);\r\n    if (n < string.length - 1) {\r\n      // 如果n不是最后一个，就继续\r\n      n += 1;\r\n      step();\r\n    }\r\n  }, 30);\r\n};\r\n\r\nstep();\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}